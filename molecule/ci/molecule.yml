---
# CI-specific molecule configuration
# Uses only publicly available images (no Red Hat registry authentication required)
dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml

driver:
  name: podman
  options:
    podman_binary: /usr/bin/podman
    podman_extra_args: --log-level=info

platforms:
  # Rocky Linux 9 (RHEL 9 compatible) - Public registry
  - name: rocky-9-ci
    image: docker.io/rockylinux/rockylinux:9-ubi-init
    dockerfile: Dockerfile.rhel
    pre_build_image: false
    systemd: always
    command: "/usr/sbin/init"
    capabilities:
      - SYS_ADMIN
    groups:
      - rhel9_compatible
    cgroupns_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      
  # AlmaLinux 9 (RHEL 9 compatible) - Public registry
  - name: alma-9-ci
    image: docker.io/almalinux/9-init:9.6-20250712
    dockerfile: Dockerfile.rhel
    pre_build_image: false
    systemd: always
    command: "/usr/sbin/init"
    capabilities:
      - SYS_ADMIN
    groups:
      - rhel9_compatible
    cgroupns_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      
  # Rocky Linux 8 (RHEL 8 compatible) - Public registry
  - name: rocky-8-ci
    image: docker.io/rockylinux/rockylinux:8-ubi-init
    dockerfile: Dockerfile.rhel
    pre_build_image: false
    systemd: always
    command: "/usr/sbin/init"
    capabilities:
      - SYS_ADMIN
    groups:
      - rhel8_compatible
    cgroupns_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

provisioner:
  name: ansible
  env:
    ANSIBLE_FORCE_COLOR: "true"
    ANSIBLE_VERBOSITY: "1"
    ANSIBLE_ROLES_PATH: "../../roles"
  config_options:
    defaults:
      interpreter_python: auto_silent
      callback_whitelist: profile_tasks, timer, yaml
      host_key_checking: false
      deprecation_warnings: false
      roles_path: "../../roles"
    ssh_connection:
      pipelining: true
  inventory:
    links:
      hosts: ../../inventories/test/hosts
      group_vars: ../../inventories/test/group_vars/
  playbooks:
    converge: ../default/converge.yml
    verify: ../default/verify.yml

lint: |
  set -e
  yamllint .
  ansible-lint roles/kvmhost_setup/ --exclude .github/

verifier:
  name: testinfra
  options:
    verbose: true

scenario:
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - cleanup
    - destroy
  create_sequence:
    - dependency
    - create
    - prepare
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  destroy_sequence:
    - cleanup
    - destroy
  check_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
