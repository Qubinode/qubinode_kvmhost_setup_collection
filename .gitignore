/tests/output/
/changelogs/.plugin-cache.yaml

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
mcp-shrimp-task-manager
.vscode

# Security and sensitive files
*.key
*.pem
*.p12
*.pfx
secrets.yml
secrets.yaml
.secrets
.credentials
config/secrets.yml
config/database.yml

# Security scanner configuration files (keep these tracked)
.security-config.toml
.security-ignore

# Generated analysis reports (allow specific reports, exclude temp files)
*-temp-analysis-*.json
*-temp-compliance-*.json
*-temp-validation-*.json

# Temporary and generated files  
*.tmp
*.temp
.DS_Store
Thumbs.db
*.swp
*.swo
*~

# IDE and editor files
.idea/
*.sublime-*
.vscode/settings.json
.vscode/launch.json

# Node.js and npm (if any)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# API keys and tokens (additional patterns)
.env.local
.env.*.local
*.env
api_keys.txt
tokens.txt

# Logs and debug files
*.log
logs/
debug/
crash.log
error.log

# Experimental and research files
experiments/
research-temp/
*.experimental
*.research
conversation-logs/
llm-conversations/

# Backup files
*.bak
*.backup
*.old
*~

# MCP Task Management Cache (Private - Don't Commit)
.mcp-adr-cache/
todo-data.json
tasks.json

# Deployment Readiness - Pipeline Testing Focus
# Security and compliance reports (regenerated by CI/CD)
security-reports/
compliance-reports/
dependency-validation-reports/

# Structure validation reports (temporary analysis files)
structure-validation-*.json
structure-validation-report.md

# ADR compliance reports (generated by automation)
adr-compliance-*.json
adr-compliance-summary.md

# Bandit and security audit reports
bandit-report.json
pip-audit-report.json
safety-report.json
.ansible

# Experimental files and drafts not ready for production
*.experimental
*.draft
*-temp-*
*-draft-*
.aider*
