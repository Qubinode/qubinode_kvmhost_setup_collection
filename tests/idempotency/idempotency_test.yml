---
# Idempotency Testing Framework
# This playbook tests that all roles and tasks are idempotent
# (can be run multiple times without changing system state)

- name: "Idempotency Testing Framework"
  hosts: all
  gather_facts: true
  vars:
    idempotency_test_results: []
    idempotency_failed_tasks: []
    
  tasks:
    - name: "Record initial system state"
      ansible.builtin.setup:
      register: initial_facts
      
    - name: "Create idempotency test results directory"
      ansible.builtin.file:
        path: "/tmp/idempotency_tests"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true

    - name: "Test Role: kvmhost_setup - First run"
      ansible.builtin.include_role:
        name: kvmhost_setup
      register: first_run_result
      ignore_errors: true
      tags:
        - kvmhost_setup
        - idempotency

    - name: "Test Role: kvmhost_setup - Second run (idempotency check)"
      ansible.builtin.include_role:
        name: kvmhost_setup
      register: second_run_result
      ignore_errors: true
      tags:
        - kvmhost_setup
        - idempotency

    - name: "Analyze kvmhost_setup idempotency results"
      ansible.builtin.set_fact:
        kvmhost_setup_idempotent: "{{ second_run_result.changed == false }}"
        kvmhost_setup_changed_tasks: "{{ second_run_result.results | default([]) | selectattr('changed', 'equalto', true) | list }}"
      tags:
        - kvmhost_setup
        - idempotency

    - name: "Record kvmhost_setup idempotency test result"
      ansible.builtin.set_fact:
        idempotency_test_results: "{{ idempotency_test_results + [kvmhost_setup_test_result] }}"
      vars:
        kvmhost_setup_test_result:
          role: "kvmhost_setup"
          idempotent: "{{ kvmhost_setup_idempotent }}"
          changed_tasks: "{{ kvmhost_setup_changed_tasks }}"
          first_run_changed: "{{ first_run_result.changed | default(false) }}"
          second_run_changed: "{{ second_run_result.changed | default(false) }}"
      tags:
        - kvmhost_setup
        - idempotency

    - name: "Test Role: edge_hosts_validate - First run"
      ansible.builtin.include_role:
        name: edge_hosts_validate
      register: edge_validate_first_run
      ignore_errors: true
      tags:
        - edge_hosts_validate
        - idempotency

    - name: "Test Role: edge_hosts_validate - Second run (idempotency check)"
      ansible.builtin.include_role:
        name: edge_hosts_validate
      register: edge_validate_second_run
      ignore_errors: true
      tags:
        - edge_hosts_validate
        - idempotency

    - name: "Analyze edge_hosts_validate idempotency results"
      ansible.builtin.set_fact:
        edge_validate_idempotent: "{{ edge_validate_second_run.changed == false }}"
        edge_validate_changed_tasks: "{{ edge_validate_second_run.results | default([]) | selectattr('changed', 'equalto', true) | list }}"
      tags:
        - edge_hosts_validate
        - idempotency

    - name: "Record edge_hosts_validate idempotency test result"
      ansible.builtin.set_fact:
        idempotency_test_results: "{{ idempotency_test_results + [edge_validate_test_result] }}"
      vars:
        edge_validate_test_result:
          role: "edge_hosts_validate"
          idempotent: "{{ edge_validate_idempotent }}"
          changed_tasks: "{{ edge_validate_changed_tasks }}"
          first_run_changed: "{{ edge_validate_first_run.changed | default(false) }}"
          second_run_changed: "{{ edge_validate_second_run.changed | default(false) }}"
      tags:
        - edge_hosts_validate
        - idempotency

    - name: "Test Role: swygue_lvm - First run"
      ansible.builtin.include_role:
        name: swygue_lvm
      register: lvm_first_run
      ignore_errors: true
      tags:
        - swygue_lvm
        - idempotency

    - name: "Test Role: swygue_lvm - Second run (idempotency check)"
      ansible.builtin.include_role:
        name: swygue_lvm
      register: lvm_second_run
      ignore_errors: true
      tags:
        - swygue_lvm
        - idempotency

    - name: "Analyze swygue_lvm idempotency results"
      ansible.builtin.set_fact:
        lvm_idempotent: "{{ lvm_second_run.changed == false }}"
        lvm_changed_tasks: "{{ lvm_second_run.results | default([]) | selectattr('changed', 'equalto', true) | list }}"
      tags:
        - swygue_lvm
        - idempotency

    - name: "Record swygue_lvm idempotency test result"
      ansible.builtin.set_fact:
        idempotency_test_results: "{{ idempotency_test_results + [lvm_test_result] }}"
      vars:
        lvm_test_result:
          role: "swygue_lvm"
          idempotent: "{{ lvm_idempotent }}"
          changed_tasks: "{{ lvm_changed_tasks }}"
          first_run_changed: "{{ lvm_first_run.changed | default(false) }}"
          second_run_changed: "{{ lvm_second_run.changed | default(false) }}"
      tags:
        - swygue_lvm
        - idempotency

    - name: "Record final system state"
      ansible.builtin.setup:
      register: final_facts

    - name: "Generate idempotency test report"
      ansible.builtin.template:
        src: idempotency_report.j2
        dest: "/tmp/idempotency_tests/idempotency_report_{{ ansible_date_time.epoch }}.json"
        mode: '0644'
      vars:
        test_timestamp: "{{ ansible_date_time.iso8601 }}"
        test_host: "{{ inventory_hostname }}"
        initial_state: "{{ initial_facts }}"
        final_state: "{{ final_facts }}"
        results: "{{ idempotency_test_results }}"
      delegate_to: localhost

    - name: "Display idempotency test summary"
      ansible.builtin.debug:
        msg: |
          Idempotency Test Summary:
          {% for result in idempotency_test_results %}
          - {{ result.role }}: {% if result.idempotent %}✅ PASS{% else %}❌ FAIL{% endif %}
          {% if not result.idempotent %}
            Changed tasks: {{ result.changed_tasks | length }}
          {% endif %}
          {% endfor %}

    - name: "Collect failed tasks for detailed analysis"
      ansible.builtin.set_fact:
        idempotency_failed_tasks: "{{ idempotency_failed_tasks + [item] }}"
      loop: "{{ idempotency_test_results }}"
      when: not item.idempotent

    - name: "Fail if any roles are not idempotent"
      ansible.builtin.fail:
        msg: |
          Idempotency test failed for {{ idempotency_failed_tasks | length }} role(s):
          {% for failed in idempotency_failed_tasks %}
          - {{ failed.role }}: {{ failed.changed_tasks | length }} tasks still changing on second run
          {% endfor %}
          
          See detailed report in /tmp/idempotency_tests/ for analysis.
      when: idempotency_failed_tasks | length > 0

    - name: "Idempotency test completed successfully"
      ansible.builtin.debug:
        msg: "🎉 All roles passed idempotency tests! All tasks are properly idempotent."
      when: idempotency_failed_tasks | length == 0
