[build-system]
requires = ["setuptools>=45,<75.0.0", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "qubinode-kvmhost-setup-collection"
description = "Qubinode KVM Host Setup Ansible Collection"
readme = "README.md"
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "Qubinode Team", email = "info@qubinode.io"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Systems Administration",
]
keywords = ["ansible", "kvm", "virtualization", "rhel", "rocky", "centos"]
requires-python = ">=3.11"
dependencies = [
    "ansible-core>=2.18.0,<2.19.0",
    "ansible-lint>=6.0.0",
    "molecule>=25.6.0",
    "molecule-podman",
    "yamllint>=1.28.0",
    "jinja2>=3.0.0",
    "packaging",
    "requests",
    "pyyaml",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pre-commit>=2.15.0",
    "pytest>=6.0.0",
    "pytest-ansible",
    "testinfra",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]
testing = [
    "molecule>=25.6.0",
    "molecule-podman",
    "pytest>=6.0.0",
    "pytest-ansible",
    "testinfra",
]

[project.urls]
Homepage = "https://github.com/Qubinode/qubinode_kvmhost_setup_collection"
Repository = "https://github.com/Qubinode/qubinode_kvmhost_setup_collection.git"
Issues = "https://github.com/Qubinode/qubinode_kvmhost_setup_collection/issues"
Documentation = "https://github.com/Qubinode/qubinode_kvmhost_setup_collection/blob/main/README.md"

[tool.setuptools]
packages = []

[tool.setuptools_scm]
write_to = "_version.py"

[tool.ansible-lint]
exclude_paths = [
    ".cache/",
    ".github/",
    ".venv/",
    "molecule/",
    "tests/",
]
skip_list = [
    "yaml[line-length]",
    "name[casing]",
]
warn_list = [
    "experimental",
]

[tool.yamllint]
extends = "default"

[tool.yamllint.rules.line-length]
max = 120

[tool.yamllint.rules.indentation]
indent-sequences = true

[tool.yamllint.rules.comments-indentation]
disable = true

[tool.yamllint.rules.comments]
min-spaces-from-content = 1

[tool.bandit]
exclude_dirs = ["tests", "molecule", "roles/linux-system-roles.network", "roles/linux-system-roles.storage"]
skips = ["B101", "B601", "B110", "B603", "B607"]  # Skip try/except/pass and subprocess warnings for external roles

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = """
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
"""