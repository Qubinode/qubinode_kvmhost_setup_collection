
# =============================================================================
# VALIDATION REPORTING
# =============================================================================
# Generates comprehensive validation reports with error details and ADR references

- name: Generate validation summary
  ansible.builtin.set_fact:
    validation_summary:
      framework_version: "{{ validation_framework_version }}"
      timestamp: "{{ ansible_date_time.iso8601 }}"
      validation_scope: "{{ validation_scope | default('all_roles') }}"
      total_errors: "{{ validation_errors | length }}"
      total_warnings: "{{ validation_warnings | length }}"
      adr_compliance_status: "{{ 'FAILED' if validation_errors | length > 0 else 'PASSED' }}"
      environment: "{{ inventory_environment | default('unknown') }}"
      drift_detection_enabled: "{{ enable_drift_detection | default(false) }}"

- name: Create validation report structure
  ansible.builtin.set_fact:
    validation_report:
      summary: "{{ validation_summary }}"
      errors: "{{ validation_errors }}"
      warnings: "{{ validation_warnings }}"
      adr_references: "{{ adr_compliance_references | default([]) }}"
      recommendations: "{{ validation_recommendations | default([]) }}"

- name: Display validation summary
  ansible.builtin.debug:
    msg: |
      ===============================================================================
      VARIABLE VALIDATION FRAMEWORK REPORT
      ===============================================================================
      Framework Version: {{ validation_summary.framework_version }}
      Validation Timestamp: {{ validation_summary.timestamp }}
      Environment: {{ validation_summary.environment }}
      Drift Detection: {{ validation_summary.drift_detection_enabled | ternary('Enabled', 'Disabled') }}
      
      SUMMARY:
      ========
      Total Errors: {{ validation_summary.total_errors }}
      Total Warnings: {{ validation_summary.total_warnings }}
      ADR Compliance: {{ validation_summary.adr_compliance_status }}
      
      {% if validation_errors | length > 0 %}
      ERRORS:
      =======
      {% for error in validation_errors %}
      ❌ {{ error }}
      {% endfor %}
      {% endif %}
      
      {% if validation_warnings | length > 0 %}
      WARNINGS:
      =========
      {% for warning in validation_warnings %}
      ⚠️  {{ warning }}
      {% endfor %}
      {% endif %}
      
      {% if validation_summary.total_errors == 0 %}
      ✅ All variable validation checks passed successfully!
      {% endif %}
      ===============================================================================

- name: Generate ADR compliance references
  ansible.builtin.set_fact:
    adr_compliance_references:
      - "ADR-0001: DNF Module for EPEL Installation - Check epel_installation_method"
      - "ADR-0002: Ansible Role-Based Modular Architecture - Validate role structure"
      - "ADR-0003: KVM Virtualization Platform Selection - Ensure KVM/libvirt usage"
      - "ADR-0006: Configuration Management Patterns - Schema-driven validation"
      - "ADR-0007: Network Architecture Decisions - Bridge-based networking"

- name: Generate validation recommendations
  ansible.builtin.set_fact:
    validation_recommendations: "{{ validation_recommendations | default([]) + [recommendation] }}"
  vars:
    recommendation: "Review ADR-0001 for proper EPEL installation using DNF modules"
  when: 
    - validation_errors | select('search', 'epel_installation_method') | list | length > 0

- name: Add bridge naming recommendation
  ansible.builtin.set_fact:
    validation_recommendations: "{{ validation_recommendations | default([]) + [bridge_recommendation] }}"
  vars:
    bridge_recommendation: "Consider using standard bridge naming pattern (virbr*) per ADR-0007"
  when: 
    - validation_warnings | select('search', 'bridge device') | list | length > 0

- name: Add schema compliance recommendation
  ansible.builtin.set_fact:
    validation_recommendations: "{{ validation_recommendations | default([]) + [schema_recommendation] }}"
  vars:
    schema_recommendation: "Update variable definitions to match JSON schema requirements per ADR-0006"
  when: 
    - validation_errors | select('search', 'schema validation') | list | length > 0

- name: Save validation report to file
  ansible.builtin.copy:
    content: "{{ validation_report | to_nice_yaml(indent=2) }}"
    dest: "{{ validation_report_path | default('/tmp/validation_report.yml') }}"
    mode: '0644'
  when: save_validation_report | default(false)
  delegate_to: localhost

- name: Display validation recommendations
  ansible.builtin.debug:
    msg: |
      RECOMMENDATIONS:
      ================
      {% for recommendation in validation_recommendations | default([]) %}
      💡 {{ recommendation }}
      {% endfor %}
  when: validation_recommendations | default([]) | length > 0
