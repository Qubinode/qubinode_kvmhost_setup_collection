# =============================================================================
# SHARED VALIDATION UTILITIES
# =============================================================================
# Common validation functions and helpers for cross-role consistency

# IP Address validation utility
- name: Validate IP address format
  ansible.builtin.set_fact:
    is_valid_ipv4: "{{ target_ip | ansible.utils.ipv4 }}"
  vars:
    target_ip: "{{ validation_ip }}"
  when: validation_ip is defined

# Path validation utility  
- name: Validate absolute path format
  ansible.builtin.set_fact:
    is_valid_path: "{{ validation_path | regex_search('^/[a-zA-Z0-9/_.-]+$') | bool }}"
  vars:
    validation_path: "{{ target_path }}"
  when: target_path is defined

# Network interface validation utility
- name: Validate network interface naming
  ansible.builtin.set_fact:
    is_valid_interface: "{{ target_interface | regex_search('^[a-zA-Z][a-zA-Z0-9_-]*$') | bool }}"
  vars:
    target_interface: "{{ validation_interface }}"
  when: validation_interface is defined

# Port range validation utility
- name: Validate port range
  ansible.builtin.set_fact:
    is_valid_port: "{{ (target_port | int >= min_port | int) and (target_port | int <= max_port | int) }}"
  vars:
    target_port: "{{ validation_port }}"
    min_port: "{{ port_min | default(1024) }}"
    max_port: "{{ port_max | default(65535) }}"
  when: validation_port is defined

# User/Group name validation utility
- name: Validate user/group naming convention
  ansible.builtin.set_fact:
    is_valid_username: "{{ target_username | regex_search('^[a-zA-Z][a-zA-Z0-9_-]*$') | bool }}"
  vars:
    target_username: "{{ validation_username }}"
  when: validation_username is defined

# Boolean type validation utility
- name: Validate boolean type
  ansible.builtin.set_fact:
    is_valid_boolean: "{{ target_boolean | type_debug == 'bool' }}"
  vars:
    target_boolean: "{{ validation_boolean }}"
  when: validation_boolean is defined

# List uniqueness validation utility
- name: Validate list uniqueness
  ansible.builtin.set_fact:
    is_unique_list: "{{ target_list | length == target_list | unique | length }}"
  vars:
    target_list: "{{ validation_list }}"
  when:
    - validation_list is defined
    - validation_list | type_debug == 'list'

# Service name validation utility
- name: Validate systemd service naming
  ansible.builtin.set_fact:
    is_valid_service: "{{ target_service | regex_search('^[a-zA-Z][a-zA-Z0-9_.-]*$') | bool }}"
  vars:
    target_service: "{{ validation_service }}"
  when: validation_service is defined

# File permission validation utility
- name: Validate file permissions format
  ansible.builtin.set_fact:
    is_valid_permissions: "{{ target_permissions | regex_search('^[0-7]{3,4}$') | bool }}"
  vars:
    target_permissions: "{{ validation_permissions }}"
  when: validation_permissions is defined

# Domain name validation utility
- name: Validate domain name format
  ansible.builtin.set_fact:
    is_valid_domain: "{{ target_domain | regex_search('^[a-zA-Z0-9][a-zA-Z0-9.-]*[a-zA-Z0-9]$') and target_domain | length
      >= 3 }}"
  vars:
    target_domain: "{{ validation_domain }}"
  when: validation_domain is defined
