---
# =============================================================================
# CROSS-ROLE DEPENDENCY VALIDATION
# =============================================================================
# Validates dependencies and consistency between different roles

- name: Check kvmhost_networking dependency on kvmhost_base
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [base_dependency_error_msg] }}"
  vars:
    base_dependency_error_msg: "Cross-role validation error: kvmhost_networking requires kvmhost_base but base_packages_common
      is not defined"
  when:
    - libvirt_host_networks is defined
    - base_packages_common is not defined

- name: Check kvmhost_storage dependency on kvmhost_base
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [storage_base_dependency_error_msg] }}"
  vars:
    storage_base_dependency_error_msg: "Cross-role validation error: kvmhost_storage requires kvmhost_base but enable_epel
      is not defined"
  when:
    - libvirt_host_storage_pools is defined
    - enable_epel is not defined

- name: Check kvmhost_libvirt dependency on kvmhost_networking
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [libvirt_network_dependency_error_msg] }}"
  vars:
    libvirt_network_dependency_error_msg: "Cross-role validation error: kvmhost_libvirt requires kvmhost_networking but kvmhost_bridge_device
      is not defined"
  when:
    - kvm_host_libvirt_dir is defined
    - kvmhost_bridge_device is not defined

- name: Check kvmhost_libvirt dependency on kvmhost_storage
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [libvirt_storage_dependency_error_msg] }}"
  vars:
    libvirt_storage_dependency_error_msg: "Cross-role validation error: kvmhost_libvirt requires kvmhost_storage but libvirt_host_storage_pools
      is not defined"
  when:
    - kvm_host_libvirt_dir is defined
    - libvirt_host_storage_pools is not defined

- name: Check kvmhost_cockpit dependency on kvmhost_base
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [cockpit_base_dependency_error_msg] }}"
  vars:
    cockpit_base_dependency_error_msg: "Cross-role validation error: kvmhost_cockpit requires kvmhost_base but base_packages_common
      is not defined"
  when:
    - enable_cockpit is defined
    - enable_cockpit | bool
    - base_packages_common is not defined

- name: Check kvmhost_user_config dependency on kvmhost_base
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [user_config_base_dependency_error_msg] }}"
  vars:
    user_config_base_dependency_error_msg: "Cross-role validation error: kvmhost_user_config requires kvmhost_base but supported_os_families
      is not defined"
  when:
    - admin_user is defined
    - supported_os_families is not defined

- name: Validate bridge device consistency across roles
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [bridge_consistency_error_msg] }}"
  vars:
    bridge_consistency_error_msg: "Cross-role validation error: Inconsistent bridge device names between kvmhost_bridge_device
      and network configurations"
  when:
    - kvmhost_bridge_device is defined
    - libvirt_host_networks is defined
    - libvirt_host_networks | length > 0
    - libvirt_host_networks | selectattr('bridge_device', 'equalto', kvmhost_bridge_device) | list | length == 0

- name: Validate domain consistency across roles
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [domain_consistency_error_msg] }}"
  vars:
    domain_consistency_error_msg: "Cross-role validation error: Domain '{{ domain }}' is used in networking but admin_user
      environment doesn't reference it"
  when:
    - domain is defined
    - admin_user is defined
    - user_shell_configs is defined
    - user_shell_configs.environment_variables is defined
    - user_shell_configs.environment_variables.DOMAIN is not defined

- name: Check libvirt user access consistency
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [libvirt_user_consistency_error_msg] }}"
  vars:
    libvirt_user_consistency_error_msg: "Cross-role validation error: enable_libvirt_admin_user is true but admin_user is
      not in libvirt group"
  when:
    - enable_libvirt_admin_user is defined
    - enable_libvirt_admin_user | bool
    - admin_user is defined
    - user_groups is defined
    - "'libvirt' not in user_groups"

- name: Validate cockpit and networking port conflicts
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [port_conflict_error_msg] }}"
  vars:
    port_conflict_error_msg: "Cross-role validation error: Cockpit port '{{ kvmhost_cockpit_port }}' conflicts with SSH port
      '{{ ssh_configuration.ssh_port }}'"
  when:
    - enable_cockpit is defined
    - enable_cockpit | bool
    - kvmhost_cockpit_port is defined
    - ssh_configuration is defined
    - ssh_configuration.ssh_port is defined
    - kvmhost_cockpit_port | int == ssh_configuration.ssh_port | int

- name: Add cross-role validation success
  ansible.builtin.set_fact:
    validation_warnings: "{{ validation_warnings + ['Cross-role dependency validation passed'] }}"
  when: validation_errors | length == 0
