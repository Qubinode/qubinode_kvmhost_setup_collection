
# =============================================================================
# SCHEMA VALIDATION FOR KVMHOST_NETWORKING ROLE
# =============================================================================
# Validates kvmhost_networking role variables against JSON schema

- name: Load kvmhost_networking schema
  ansible.builtin.set_fact:
    kvmhost_networking_schema: "{{ lookup('file', validation_schemas_dir + '/kvmhost_networking_schema.json') | from_json }}"
  vars:
    validation_schemas_dir: "{{ playbook_dir }}/validation/schemas"

- name: Extract kvmhost_networking variables for validation
  ansible.builtin.set_fact:
    kvmhost_networking_vars:
      kvmhost_bridge_device: "{{ kvmhost_bridge_device | default('') }}"
      libvirt_host_networks: "{{ libvirt_host_networks | default([]) }}"
      dns_forwarder: "{{ dns_forwarder | default('') }}"
      domain: "{{ domain | default('') }}"
      enable_firewall: "{{ enable_firewall | default(true) }}"
      firewall_zones: "{{ firewall_zones | default([]) }}"

- name: Validate kvmhost_networking required properties
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [error_msg] }}"
  vars:
    error_msg: "kvmhost_networking validation error: Required property '{{ item }}' is missing or empty"
  when: 
    - kvmhost_networking_schema.required is defined
    - item in kvmhost_networking_schema.required
    - kvmhost_networking_vars[item] is not defined or kvmhost_networking_vars[item] | length == 0
  loop: "{{ kvmhost_networking_schema.required }}"

- name: Validate bridge device naming convention
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [bridge_error_msg] }}"
  vars:
    bridge_error_msg: "kvmhost_networking validation error: Bridge device '{{ kvmhost_networking_vars.kvmhost_bridge_device }}' does not match naming pattern"
  when: 
    - kvmhost_networking_vars.kvmhost_bridge_device | length > 0
    - not (kvmhost_networking_vars.kvmhost_bridge_device | regex_search('^[a-zA-Z][a-zA-Z0-9_-]*$'))

- name: Validate DNS forwarder IP format
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [dns_error_msg] }}"
  vars:
    dns_error_msg: "kvmhost_networking validation error: DNS forwarder '{{ kvmhost_networking_vars.dns_forwarder }}' is not a valid IPv4 address"
  when: 
    - kvmhost_networking_vars.dns_forwarder | length > 0
    - not (kvmhost_networking_vars.dns_forwarder | ansible.utils.ipv4)

- name: Validate domain name format
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [domain_error_msg] }}"
  vars:
    domain_error_msg: "kvmhost_networking validation error: Domain '{{ kvmhost_networking_vars.domain }}' does not match valid domain pattern"
  when: 
    - kvmhost_networking_vars.domain | length > 0
    - not (kvmhost_networking_vars.domain | regex_search('^[a-zA-Z0-9][a-zA-Z0-9.-]*[a-zA-Z0-9]$'))
    - kvmhost_networking_vars.domain | length < 3

- name: Validate libvirt network configuration
  ansible.builtin.include_tasks: validate_network_config.yml
  vars:
    network_item: "{{ item }}"
  loop: "{{ kvmhost_networking_vars.libvirt_host_networks }}"
  when: kvmhost_networking_vars.libvirt_host_networks | length > 0

- name: Validate firewall zones
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [firewall_error_msg] }}"
  vars:
    firewall_error_msg: "kvmhost_networking validation error: Invalid firewall zone '{{ item }}'"
    valid_zones: ["public", "internal", "trusted", "dmz", "work", "home"]
  when: 
    - kvmhost_networking_vars.firewall_zones | length > 0
    - item not in valid_zones
  loop: "{{ kvmhost_networking_vars.firewall_zones }}"

- name: ADR-0007 bridge architecture compliance check
  ansible.builtin.set_fact:
    validation_warnings: "{{ validation_warnings + [bridge_compliance_msg] }}"
  vars:
    bridge_compliance_msg: "ADR-0007 compliance: Bridge-based networking architecture validated"
  when: 
    - kvmhost_networking_vars.libvirt_host_networks | length > 0
    - kvmhost_networking_vars.libvirt_host_networks | selectattr('mode', 'equalto', 'bridge') | list | length > 0

- name: Add kvmhost_networking validation success
  ansible.builtin.set_fact:
    validation_warnings: "{{ validation_warnings + ['kvmhost_networking schema validation passed'] }}"
  when: validation_errors | length == 0
