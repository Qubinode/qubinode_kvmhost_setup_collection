
# =============================================================================
# VOLUME GROUP CONFIG VALIDATION HELPER
# =============================================================================
# Validates individual volume group configuration items

- name: Validate volume group required fields
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [vg_error_msg] }}"
  vars:
    vg_error_msg: "kvmhost_storage validation error: Volume group '{{ vg_item.name | default('unnamed') }}' missing required field '{{ required_field }}'"
  when: 
    - vg_item[required_field] is not defined or (vg_item[required_field] | type_debug == 'list' and vg_item[required_field] | length == 0)
  loop:
    - name
    - devices
  loop_control:
    loop_var: required_field

- name: Validate volume group name pattern
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [vg_name_error_msg] }}"
  vars:
    vg_name_error_msg: "kvmhost_storage validation error: Volume group name '{{ vg_item.name }}' does not match naming pattern"
  when: 
    - vg_item.name is defined
    - not (vg_item.name | regex_search('^[a-zA-Z][a-zA-Z0-9_-]*$'))

- name: Validate device paths
  ansible.builtin.set_fact:
    validation_errors: "{{ validation_errors + [device_error_msg] }}"
  vars:
    device_error_msg: "kvmhost_storage validation error: Volume group '{{ vg_item.name }}' device '{{ item }}' must be an absolute path under /dev/"
  when: 
    - vg_item.devices is defined
    - not (item | regex_search('^/dev/[a-zA-Z0-9/_-]+$'))
  loop: "{{ vg_item.devices }}"
