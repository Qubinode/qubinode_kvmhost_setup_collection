# =============================================================================
# LIBVIRT USER ACCESS CONFIGURATION
# =============================================================================
# Configure user access to libvirt for non-root administration

- name: Display user access configuration
  ansible.builtin.debug:
    msg:
      - "Configuring libvirt user access"
      - "Admin group: {{ kvmhost_libvirt_admin_group }}"
      - "Admin users: {{ kvmhost_libvirt_admin_users | join(', ') if kvmhost_libvirt_admin_users else admin_user | default('None')
        }}"
  when: kvmhost_libvirt_debug_enabled | default(false)

- name: Add specified users to libvirt group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: "{{ kvmhost_libvirt_admin_group }},qemu"
    append: true
  loop: "{{ kvmhost_libvirt_admin_users }}"
  become: true
  when: kvmhost_libvirt_admin_users | length > 0

- name: Add admin_user to libvirt group (legacy compatibility)
  ansible.builtin.user:
    name: "{{ admin_user }}"
    groups: "{{ kvmhost_libvirt_admin_group }},qemu"
    append: true
  become: true
  when:
    - admin_user is defined
    - admin_user != ""
    - admin_user not in kvmhost_libvirt_admin_users | default([])

- name: Configure libvirt unix socket group
  ansible.builtin.lineinansible.builtin.ansible.builtin.file:
    dest: /etc/libvirt/libvirtd.conf
    regexp: "^#?\\s*unix_sock_group\\s*=.*$"
    line: 'unix_sock_group = "{{ kvmhost_libvirt_unix_sock_group }}"'
    backup: true
  notify: Reload libvirtd service
  become: true

- name: Configure libvirt unix socket read-write permissions
  ansible.builtin.lineinansible.builtin.ansible.builtin.file:
    dest: /etc/libvirt/libvirtd.conf
    regexp: "^#?\\s*unix_sock_rw_perms\\s*=.*$"
    line: 'unix_sock_rw_perms = "{{ kvmhost_libvirt_unix_sock_rw_perms }}"'
    backup: true
  notify: Reload libvirtd service
  become: true

- name: Configure libvirt unix socket admin permissions
  ansible.builtin.lineinansible.builtin.ansible.builtin.file:
    dest: /etc/libvirt/libvirtd.conf
    regexp: "^#?\\s*unix_sock_admin_perms\\s*=.*$"
    line: 'unix_sock_admin_perms = "{{ kvmhost_libvirt_unix_sock_admin_perms }}"'
    backup: true
  notify: Reload libvirtd service
  become: true

- name: Verify libvirt group membership
  ansible.builtin.command: "getent group {{ kvmhost_libvirt_admin_group }}"
  register: libvirt_group_check
  changed_when: false
  failed_when: false

- name: Display group membership
  ansible.builtin.debug:
    msg: "Libvirt group members: {{ libvirt_group_check.stdout.split(':')[3] if libvirt_group_check.rc == 0 else 'Group not
      found' }}"
  when: kvmhost_libvirt_debug_enabled | default(false)

- name: Test libvirt access for current user
  ansible.builtin.command: virsh version
  register: user_libvirt_test
  changed_when: false
  failed_when: false
  become: false
  when: ansible_user is defined

- name: Display libvirt access test result
  ansible.builtin.debug:
    msg: "Libvirt access test for {{ ansible_user | default('current user') }}: {{ 'Success' if user_libvirt_test.rc == 0
      else 'Failed - may need to log out and back in' }}"
  when:
    - kvmhost_libvirt_debug_enabled | default(false)
    - user_libvirt_test is defined
