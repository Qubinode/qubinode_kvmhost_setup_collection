# =============================================================================
# KVMHOST COCKPIT ROLE - COCKPIT VALIDATION
# =============================================================================
# Validates Cockpit installation, configuration, and accessibility

- name: Verify Cockpit socket is active
  ansible.builtin.systemd:
    name: cockpit.socket
  register: cockpit_socket_check
  failed_when: cockpit_socket_check.status.ActiveState != "active"

- name: Test Cockpit port accessibility
  ansible.builtin.wait_for:
    port: "{{ kvmhost_cockpit_port }}"
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 30
  register: port_test

- name: Test Cockpit web interface response
  ansible.builtin.uri:
    url: >-
      {{ 'https' if kvmhost_cockpit_ssl_enabled else 'http' }}://{{
      ansible_default_ipv4.address }}:{{ kvmhost_cockpit_port }}/login
    method: GET
    validate_certs: false
    timeout: 10
  register: web_test
  failed_when: web_test.status != 200

- name: Verify Cockpit configuration files
  ansible.builtin.stat:
    path: "{{ item }}"
  register: config_files
  loop:
    - /etc/cockpit/cockpit.conf
    - /etc/systemd/system/cockpit.socket.d/listen.conf
  failed_when: false

- name: Check Cockpit modules availability
  ansible.builtin.command:
    cmd: systemctl list-units --type=service --state=loaded | grep cockpit
  register: cockpit_modules
  changed_when: false
  failed_when: false

- name: Verify SSL certificate (if SSL enabled)
  ansible.builtin.command:
    cmd: >-
      openssl s_client -connect {{ ansible_default_ipv4.address }}:{{
      kvmhost_cockpit_port }} -servername {{ ansible_fqdn }} < /dev/null
  register: ssl_test
  changed_when: false
  failed_when: false
  when: kvmhost_cockpit_ssl_enabled | bool

- name: Test Cockpit API endpoint
  ansible.builtin.uri:
    url: >-
      {{ 'https' if kvmhost_cockpit_ssl_enabled else 'http' }}://{{
      ansible_default_ipv4.address }}:{{ kvmhost_cockpit_port }}/cockpit/channel/v1/ping
    method: GET
    validate_certs: false
    timeout: 10
  register: api_test
  failed_when: false

- name: Generate Cockpit validation report
  ansible.builtin.template:
    src: cockpit_validation_report.j2
    dest: /tmp/cockpit_validation_report.txt
    mode: "0644"
  vars:
    cockpit_socket_status: "{{ cockpit_socket_check.status.ActiveState }}"
    port_accessible: "{{ port_test is succeeded }}"
    web_interface_responsive: "{{ web_test.status == 200 }}"
    ssl_configured: "{{ kvmhost_cockpit_ssl_enabled }}"
    ssl_test_result: "{{ ssl_test.rc | default('N/A') }}"
    api_responsive: "{{ api_test.status | default('N/A') }}"
    modules_loaded: "{{ cockpit_modules.stdout_lines | default([]) }}"

- name: Display validation results
  ansible.builtin.debug:
    msg:
      - Cockpit validation completed
      - "Socket status: {{ cockpit_socket_check.status.ActiveState }}"
      - "Port {{ kvmhost_cockpit_port }} accessible: {{ port_test is succeeded }}"
      - "Web interface responsive: {{ web_test.status == 200 }}"
      - "SSL enabled: {{ kvmhost_cockpit_ssl_enabled }}"
      - >-
        Access URL: {{ 'https' if kvmhost_cockpit_ssl_enabled else 'http' }}://{{
        ansible_default_ipv4.address }}:{{ kvmhost_cockpit_port }}

- name: Read and display validation report
  ansible.builtin.slurp:
    src: /tmp/cockpit_validation_report.txt
  register: validation_report

- name: Show validation report
  ansible.builtin.debug:
    msg: "{{ validation_report.content | b64decode }}"
