#!/bin/bash
# KVM Host Storage Monitoring Script
# Generated by kvmhost_storage role

set -euo pipefail

# Configuration
SPACE_THRESHOLD={{ kvmhost_storage_space_threshold }}
INODE_THRESHOLD={{ kvmhost_storage_inode_threshold }}
LOG_FILE="/var/log/kvmhost-storage.log"

# Logging function
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# Check disk space usage
check_disk_space() {
    log_message "Checking disk space usage..."
    
    # Check libvirt directories
    for dir in /var/lib/libvirt/images /var/lib/libvirt/backups /var/lib/libvirt/snapshots; do
        if [[ -d "$dir" ]]; then
            usage=$(df "$dir" | awk 'NR==2 {print $5}' | sed 's/%//')
            if [[ $usage -gt $SPACE_THRESHOLD ]]; then
                log_message "WARNING: $dir is ${usage}% full (threshold: ${SPACE_THRESHOLD}%)"
            else
                log_message "INFO: $dir usage: ${usage}%"
            fi
        fi
    done
}

# Check inode usage
check_inode_usage() {
    log_message "Checking inode usage..."
    
    for dir in /var/lib/libvirt/images /var/lib/libvirt/backups /var/lib/libvirt/snapshots; do
        if [[ -d "$dir" ]]; then
            inode_usage=$(df -i "$dir" | awk 'NR==2 {print $5}' | sed 's/%//')
            if [[ $inode_usage -gt $INODE_THRESHOLD ]]; then
                log_message "WARNING: $dir inode usage is ${inode_usage}% (threshold: ${INODE_THRESHOLD}%)"
            else
                log_message "INFO: $dir inode usage: ${inode_usage}%"
            fi
        fi
    done
}

# Check LVM health
check_lvm_health() {
    if command -v vgdisplay >/dev/null 2>&1; then
        log_message "Checking LVM health..."
        
        # Check volume groups
        vgs --noheadings 2>/dev/null | while read -r vg_info; do
            vg_name=$(echo "$vg_info" | awk '{print $1}')
            vg_size=$(echo "$vg_info" | awk '{print $6}')
            vg_free=$(echo "$vg_info" | awk '{print $7}')
            log_message "INFO: VG $vg_name - Size: $vg_size, Free: $vg_free"
        done
        
        # Check logical volumes
        lvs --noheadings 2>/dev/null | while read -r lv_info; do
            lv_name=$(echo "$lv_info" | awk '{print $1}')
            vg_name=$(echo "$lv_info" | awk '{print $2}')
            lv_size=$(echo "$lv_info" | awk '{print $4}')
            log_message "INFO: LV $lv_name in VG $vg_name - Size: $lv_size"
        done
    fi
}

# Check filesystem errors
check_filesystem_errors() {
    log_message "Checking for filesystem errors..."
    
    # Check dmesg for filesystem errors
    if dmesg | grep -i "filesystem\|ext4\|xfs" | grep -i "error" | tail -5 >/dev/null 2>&1; then
        log_message "WARNING: Filesystem errors detected in dmesg"
        dmesg | grep -i "filesystem\|ext4\|xfs" | grep -i "error" | tail -5 | while read -r line; do
            log_message "ERROR: $line"
        done
    fi
}

# Main execution
main() {
    log_message "Starting storage monitoring check..."
    
{% for check in kvmhost_storage_health_checks %}
    case "{{ check }}" in
        "disk_usage") check_disk_space ;;
        "inode_usage") check_inode_usage ;;
        "lvm_health") check_lvm_health ;;
        "filesystem_errors") check_filesystem_errors ;;
    esac
{% endfor %}
    
    log_message "Storage monitoring check completed"
}

# Run main function
main "$@"
