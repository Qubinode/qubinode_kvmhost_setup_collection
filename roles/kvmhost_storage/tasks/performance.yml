---
# =============================================================================
# STORAGE PERFORMANCE OPTIMIZATION
# =============================================================================
# Optimize storage performance for virtualization workloads

- name: Display performance optimization configuration
  ansible.builtin.debug:
    msg:
      - Applying storage performance optimizations
      - "I/O Scheduler: {{ kvmhost_storage_io_scheduler }}"
      - "Queue Depth: {{ kvmhost_storage_queue_depth }}"
  when: kvmhost_storage_debug_enabled | default(false)

- name: Get list of block devices
  ansible.builtin.shell: lsblk -dn -o NAME | grep -v loop
  register: block_devices
  changed_when: false

- name: Set I/O scheduler for block devices
  ansible.builtin.shell: echo {{ kvmhost_storage_io_scheduler }} > /sys/block/{{ item }}/queue/scheduler
  loop: "{{ block_devices.stdout_lines }}"
  when:
    - kvmhost_storage_io_scheduler != "none"
    - block_devices.stdout_lines | length > 0
  become: true
  ignore_errors: true

- name: Set queue depth for block devices
  ansible.builtin.shell: echo {{ kvmhost_storage_queue_depth }} > /sys/block/{{ item }}/queue/nr_requests
  loop: "{{ block_devices.stdout_lines }}"
  when: block_devices.stdout_lines | length > 0
  become: true
  ignore_errors: true

- name: Configure kernel parameters for storage performance
  ansible.posix.ansible.posix.sysctl:
    name: '{{ item.name }}'
    value: "{{ item.value }}"
    state: present
    reload: true
  loop:
    - { name: vm.dirty_ratio, value: "15" }
    - { name: vm.dirty_background_ratio, value: "5" }
    - { name: vm.dirty_expire_centisecs, value: "3000" }
    - { name: vm.dirty_writeback_centisecs, value: "500" }
    - { name: vm.swappiness, value: "10" }
  become: true

- name: Configure storage-related kernel parameters in grub
  ansible.builtin.lineinansible.builtin.ansible.builtin.file:
    path: /etc/default/grub
    regexp: ^GRUB_CMDLINE_LINUX=
    line: GRUB_CMDLINE_LINUX="elevator={{ kvmhost_storage_io_scheduler }} transparent_hugepage=never"
    backup: true
  notify: Update grub configuration
  become: true
  when: ansible_os_family == "RedHat"

- name: Check if transparent huge pages are disabled
  ansible.builtin.command: cat /sys/kernel/mm/transparent_hugepage/enabled
  register: thp_status
  changed_when: false

- name: Display transparent huge pages status
  ansible.builtin.debug:
    msg: "Transparent Huge Pages status: {{ thp_status.stdout }}"
  when: kvmhost_storage_debug_enabled | default(false)

- name: Disable transparent huge pages (runtime)
  ansible.builtin.shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled
  when: "'[never]' not in thp_status.stdout"
  become: true

- name: Configure readahead for storage devices
  ansible.builtin.command: blockdev --setra 4096 /dev/{{ item }}
  loop: "{{ block_devices.stdout_lines }}"
  when: block_devices.stdout_lines | length > 0
  become: true
  ignore_errors: true

- name: Display performance optimization completion
  ansible.builtin.debug:
    msg:
      - Storage performance optimization completed
      - "I/O scheduler set to: {{ kvmhost_storage_io_scheduler }}"
      - "Transparent huge pages: Disabled"
      - "Kernel parameters: Optimized for virtualization"
  when: kvmhost_storage_debug_enabled | default(false)
