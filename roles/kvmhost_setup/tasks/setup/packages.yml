---
- name: Enable EPEL repository using DNF module (ADR-0001 compliant)
  ansible.builtin.dnf:
    name: "epel-release"
    state: present
  when: ansible_os_family == "RedHat"
  become: true

- name: Update package cache
  ansible.builtin.dnf:
    update_cache: true
  changed_when: false

- name: Check current package state
  ansible.builtin.package_facts:
    manager: auto
  register: current_packages

- name: Create list of missing packages
  ansible.builtin.set_fact:
    missing_packages: >-
      {{
        required_rpm_packages | difference(current_packages.packages.keys())
      }}

- name: Display missing packages
  ansible.builtin.debug:
    msg: "Missing packages to be installed: {{ missing_packages }}"
  when: missing_packages | length > 0

- name: Install required packages
  ansible.builtin.dnf:
    name: "{{ missing_packages }}"
    state: present
  register: package_install
  when: missing_packages | length > 0
  retries: 3
  delay: 5
  until: package_install is success

- name: Verify all required packages are installed
  ansible.builtin.assert:
    that: item in ansible_facts.packages
    fail_msg: "Failed to install package: {{ item }}"
    success_msg: "Successfully installed: {{ item }}"
  loop: "{{ required_rpm_packages }}"

- name: Enable required services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop: "{{ libvirt_services }}"
  register: service_status
  retries: 3
  delay: 5
  until: service_status is success

- name: Verify services are running
  ansible.builtin.systemd:
    name: "{{ item }}"
  register: service_check
  failed_when: >-
    service_check.status.ActiveState != "active" or
    service_check.status.SubState != "running"
  loop: "{{ libvirt_services }}"

- name: Ensure pip3 is installed
  ansible.builtin.dnf:
    name: python3-pip
    state: present
  register: pip_install
  retries: 3
  delay: 5
  until: pip_install is success

- name: Verify pip3 installation
  ansible.builtin.command: pip3 --version
  register: pip_check
  changed_when: false
  ignore_errors: true
  when: pip_install is success

- name: Ensure pip3 is in PATH
  ansible.builtin.shell: |
    export PATH=$PATH:/usr/local/bin
    pip3 --version
  register: pip_path_check
  changed_when: false
  ignore_errors: true

- name: Install Python dependencies
  ansible.builtin.pip:
    name:
      - libvirt-python
      - lxml
    state: present
    executable: pip3
  register: pip_install
  retries: 3
  delay: 5
  until: pip_install is success
  when: pip_path_check.rc == 0

- name: Install k9s
  ansible.builtin.include_tasks: k9s.yml
