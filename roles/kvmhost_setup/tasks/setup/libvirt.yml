- name: Ensure libvirt group exists
  ansible.builtin.group:
    name: "{{ kvm_host_group }}"
    state: present

- name: Add admin user to libvirt group
  ansible.builtin.user:
    name: "{{ admin_user }}"
    groups: "{{ kvm_host_group }}"
    append: true
  when: enable_libvirt_admin_user | bool

- name: Create libvirt images directory
  ansible.builtin.file:
    path: "{{ kvm_host_libvirt_dir }}"
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Configure libvirt to accept TCP connections
  ansible.builtin.lineinfile:
    path: /etc/libvirt/libvirtd.conf
    regexp: ^#?{{ item.regexp }}
    line: "{{ item.line }}"
  loop:
    - regexp: listen_tls
      line: listen_tls = 0
    - regexp: listen_tcp
      line: listen_tcp = 1
    - regexp: auth_tcp
      line: auth_tcp = "none"
  notify: Restart libvirtd

- name: Configure libvirt TCP socket activation
  ansible.builtin.lineinfile:
    path: /etc/sysconfig/libvirtd
    regexp: ^#?LIBVIRTD_ARGS
    line: LIBVIRTD_ARGS="--listen"
  notify: Restart libvirtd

- name: Set default URI for libvirt
  ansible.builtin.lineinfile:
    path: /etc/environment
    regexp: ^LIBVIRT_DEFAULT_URI
    line: LIBVIRT_DEFAULT_URI="qemu:///system"
    create: true

- name: Configure libvirt log level
  ansible.builtin.lineinfile:
    path: /etc/libvirt/libvirtd.conf
    regexp: ^#?log_level
    line: log_level = 3
  notify: Restart libvirtd

- name: Configure libvirt to use KVM
  ansible.builtin.lineinfile:
    path: /etc/libvirt/qemu.conf
    regexp: ^#?security_driver
    line: security_driver = "selinux"
  notify: Restart libvirtd

- name: Set libvirt autostart configuration
  ansible.builtin.lineinfile:
    path: /etc/libvirt/qemu.conf
    regexp: ^#?autostart_delay
    line: autostart_delay = 0
  notify: Restart libvirtd

- name: Ensure correct SELinux context for libvirt directory
  ansible.builtin.file:
    path: "{{ kvm_host_libvirt_dir }}"
    setype: virt_image_t
    recurse: true
  when: ansible_selinux.status == "enabled"

- name: Configure libvirt networking
  ansible.builtin.template:
    src: libvirt_net_bridge.xml.j2
    dest: /etc/libvirt/qemu/networks/{{ item.name }}.xml
    mode: "0644"
  loop: "{{ libvirt_host_networks }}"
  when: libvirt_host_networks is defined
  notify: Restart libvirtd

- name: Start and enable libvirt services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop: "{{ libvirt_services }}"
