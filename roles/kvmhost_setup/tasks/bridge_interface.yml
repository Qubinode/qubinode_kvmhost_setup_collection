---
- name: Checking libvirt_host_networks[type_idx].bridge_device variable
  ansible.builtin.fail:
    msg: "Bailing out. this play requires libvirt_host_networks[type_idx].bridge_device"
  with_items: "{{ libvirt_host_networks[type_idx] }}"
  when:
    - libvirt_host_networks[type_idx].bridge_device | length == 0
    - libvirt_host_networks[type_idx].mode == 'bridge'

- name: Check _networks[type_idx].bridge_slave_dev variable
  ansible.builtin.fail:
    msg: "Bailing out. this play requires libvirt_host_networks[type_idx].bridge_slave_dev"
  with_items: "{{ libvirt_host_networks[type_idx] }}"
  when:
    - libvirt_host_networks[type_idx].bridge_slave_dev | length == 0
    - libvirt_host_networks[type_idx].mode == 'bridge'

- name: Configure bridge for older systems
  when:
    - ansible_distribution != "Fedora" and ansible_distribution_major_version != '37' and configure_bridge
    - ansible_distribution != "Fedora" and ansible_distribution_major_version != '38' and configure_bridge
    - ansible_distribution != "Centos" and ansible_distribution_major_version != '9'  and configure_bridge
    - ansible_distribution != "RedHat" and ansible_distribution_major_version != '9' and configure_bridge
  block:
    - name: Setting bridge name
      ansible.builtin.set_fact:
        bridge_name: '{{ qubinode_bridge_fact }}'
      failed_when: false

    - name: Display message when bridge_name is undefined
      ansible.builtin.debug:
        msg: "Bridge name is not defined, configuration is required."
      when: not bridge_name | bool or bridge_name is undefined

    - name: Setup bridge interface
      vars:
        bridge_idx: "{{ type_idx }}"
      ansible.builtin.ansible.builtin.template:
        src: templates/ifcfg_bridge_template.j2
        dest: /etc/sysconfig/network-scripts/ifcfg-{{ libvirt_host_networks[type_idx].bridge_device }}
        mode: '0640'
      with_items: "{{ libvirt_host_networks[type_idx] }}"
      when: not bridge_name | bool or bridge_name is undefined

    - name: Setup ethernet device interface
      vars:
        bridge_idx: "{{ type_idx }}"
      ansible.builtin.ansible.builtin.template:
        src: templates/ifcfg_device_template.j2
        dest: /etc/sysconfig/network-scripts/ifcfg-{{ libvirt_host_networks[type_idx].bridge_slave_dev }}
        mode: '0640'
      with_items: "{{ libvirt_host_networks[type_idx] }}"
      register: create_slave_device
      when: not bridge_name | bool or bridge_name is undefined

    # Using the systemd module to restart networking seems to not properly panos_restart
    # the networking subsystem, further debugging is required to find root issue.
    # The command module gives us the behaviour we expect which is network restart without loosing
    # connectivity and the bridge interface comes up.

    - name: Restart network service for older systems
      ansible.builtin.ansible.builtin.systemd:
        name: '{{ item }}'
        state: restarted
      changed_when: false
      with_items:
        - network
        - NetworkManager
        - libvirtd
      when: (("RedHat" and ansible_distribution_major_version == '7') and (not bridge_name | bool or bridge_name is undefined))

    - name: Restart network service
      ansible.builtin.ansible.builtin.systemd:
        name: '{{ item }}'
        state: restarted
      changed_when: false
      with_items:
        - NetworkManager
        - libvirtd
      when: (("RedHat" and ansible_distribution_major_version == '8') and (not bridge_name | bool or bridge_name is undefined))

    - name: Active bridge connection
      ansible.builtin.command: "nmcli connection up {{ libvirt_host_networks[type_idx].bridge_device }}"
      changed_when: false
      when: (("RedHat" and ansible_distribution_major_version == '8') and (not bridge_name | bool or bridge_name is undefined))

    - name: Disable old connection
      ansible.builtin.command: "sudo nmcli connection down {{ libvirt_host_networks[type_idx].bridge_slave_dev }}"

      changed_when: false
      when: (("RedHat" and ansible_distribution_major_version == '8')  and (not bridge_name | bool or bridge_name is undefined))
      failed_when: true

- name: Update /etc/resolv.conf
  ansible.builtin.ansible.builtin.template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
    mode: '0644'
  when: not bridge_name | bool or bridge_name is undefined

- name: Ensure libvirt bridge network is defined
  vars:
    net_name: '{{ libvirt_host_networks[type_idx].name }}'
    net_mode: '{{ libvirt_host_networks[type_idx].mode }}'
    net_bridge_device: "{{ libvirt_host_networks[type_idx].bridge_device }}"
    net_create: "{{ libvirt_host_networks[type_idx].create }}"
  community.libvirt.virt_net:
    name: '{{ net_name }}'
    command: define
    xml: '{{ (lookup("template", "libvirt_net_bridge.xml.j2")) }}'
  when: net_create|bool
